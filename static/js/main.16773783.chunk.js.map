{"version":3,"sources":["slices/audioDataSlice.ts","slices/audioListSlice.ts","services/meta-data.ts","utils/getFileList.js","slices/audioControlSlice.ts","img/default_image.jpg","components/player-sub-component/cover-info.tsx","components/player-components.tsx","components/player-sub-component/time-indicator.tsx","utils/pictureInPicture.js","components/player-sub-component/buttons.tsx","components/player-sub-component/volume.tsx","components/player.tsx","components/app.tsx","img/sing.svg","components/login.tsx","App.tsx","store.ts","index.tsx","components/ErrorFallback.tsx"],"names":["audioData","createSlice","name","initialState","title","artist","genre","artwork","src","sizes","type","imageSrc","audioSrc","duration","reducers","setDuration","state","action","payload","setTitle","setArtist","setGenre","setImageSrc","setAudioSrc","setArtwork","actions","audioList","playingAudioId","id","imgSrc","playingAudio","setAudioList","getImgBase64Src","base64String","DEFAULT_IMG_SRC","MetaData","file","parsedBlob","this","a","parseBlob","initiateMusicMetaDataBlob","common","encode","selectCover","picture","data","label","join","artists","albumartistsort","console","log","URL","createObjectURL","getImageSrc","dataImage","map","value","resize","format","getFileList","files","filedInfo","i","length","metaData","getTitle","getArtist","getDuration","formatDuration","minute","Math","floor","secondLeft","push","audioControlSlice","loop","position","paused","volume","faster","pictureInPictureMode","setLoop","setPosition","setPaused","setVolume","setFaster","setPictureInPictureMode","Cover","audioState","useSelector","audio","theme","useTheme","match","useMediaQuery","breakpoints","down","Stack","alignItems","sx","width","Box","alt","className","DefaultImage","mt","Typography","variant","color","fontWeight","TinyText","styled","height","top","left","backdropFilter","transition","content","right","bottom","transform","palette","mode","objectFit","overflow","flexShrink","borderRadius","backgroundColor","fontSize","opacity","letterSpacing","marginLeft","marginTop","TimeIndicator","Slider","boxShadow","VolumeIndicator","border","InputFileContainer","display","justifyContent","textAlign","zIndex","cursor","PlayList","List","ListItem","Timer","audioControlState","audioControl","dispatch","useDispatch","size","min","step","max","onChange","_","current","currentTime","direction","canvas","document","createElement","video","visible","image","Image","crossOrigin","navigator","mediaSession","metadata","pop","decode","getContext","drawImage","play","requestPictureInPicture","exitPictureInPicture","srcObject","captureStream","muted","Buttons","switchSong","mainIconColor","IconButton","onClick","playbackRate","htmlColor","pause","showPictureInPictureWindow","Volume","lightIconColor","spacing","mb","e","target","MusicPlayer","React","addEventListener","event","path","padding","Application","useRef","useState","setMetaData","setFiles","audioListState","useReducer","status","musicControl","musicControlDispatch","handleEnded","useCallback","Object","keys","metaDataHandler","useEffect","fileHandler","then","fileListInfo","setAudioID","Number","getGenre","gener","getAudioSrc","getArtwork","getInfo","MediaMetadata","album","style","ref","onEnded","autoPlay","Grid","container","item","borderTop","margin","getAttribute","button","flexDirection","flexWrap","accept","multiple","htmlFor","LoginButton","Button","justifySelf","background","MYTypography","fontFamily","Login","navigate","useNavigate","backgroundImage","IMGB","align","App","element","store","configureStore","reducer","audioDataSlice","audioListSlice","ReactDOM","render","FallbackComponent","error","resetErrorBoundary","message","role","querySelector"],"mappings":"2UAkCaA,EAAYC,YAAY,CACnCC,KAAM,YACNC,aAlBsC,CACtCC,MAAO,KACPC,OAAQ,KACRC,MAAO,KACPC,QAAS,CACP,CACEC,IAAK,KACLC,MAAO,KACPC,KAAM,OAGVC,SAAU,KACVC,SAAU,KACVC,SAAU,KAMVC,SAAU,CACRC,YAAa,SAACC,EAAOC,GACnBD,EAAMH,SAAWI,EAAOC,SAE1BC,SAAU,SAACH,EAAOC,GAChBD,EAAMZ,MAAQa,EAAOC,SAEvBE,UAAW,SAACJ,EAAOC,GACjBD,EAAMX,OAASY,EAAOC,SAExBG,SAAU,SAACL,EAAOC,GAChBD,EAAMV,MAAQW,EAAOC,SAEvBI,YAAa,SAACN,EAAOC,GACnBD,EAAML,SAAWM,EAAOC,SAE1BK,YAAa,SAACP,EAAOC,GACnBD,EAAMJ,SAAWK,EAAOC,SAE1BM,WAAY,SAACR,EAAOC,GAClBD,EAAMT,QAAUU,EAAOC,YAKtB,EAQHlB,EAAUyB,QAPZN,EADK,EACLA,SACAC,EAFK,EAELA,UACAC,EAHK,EAGLA,SACAC,EAJK,EAILA,YACAC,EALK,EAKLA,YACAC,EANK,EAMLA,WACAT,EAPK,EAOLA,YAGaf,IAAf,QC5Ca0B,EAAYzB,YAAY,CACnCC,KAAM,YACNC,aAfsC,CACtCwB,eAAgB,KAChBD,UAAW,CACT,CACEE,GAAI,KACJ1B,KAAM,KACN2B,OAAQ,KACRxB,OAAQ,KACRQ,SAAU,QAQdC,SAAU,CACRgB,aAAc,SACZd,EACAC,GAEAD,EAAMW,eAAiBV,EAAOC,SAEhCa,aAAc,SAACf,EAAOC,GACpBD,EAAMU,UAAYT,EAAOC,YAKxB,EAAuCQ,EAAUD,QAAzCK,EAAR,EAAQA,aAAcC,EAAtB,EAAsBA,aAEdL,IAAf,Q,6DC1CMM,EAAkB,SAACC,GAAD,uCACIA,IAEtBC,EACJ,gKAEmBC,E,WAGnB,WAAYC,GAAa,yBAFzBA,KAAa,KAEW,KADxBC,WAAa,KAEXC,KAAKF,KAAOA,E,oGAGd,sBAAAG,EAAA,kEAESD,KAAKD,WAFd,gCAEkDG,oBAAUF,KAAKF,MAFjE,OAE0BE,KAAKD,WAF/B,qH,sHAMA,8BAAAE,EAAA,+EAEUD,KAAKG,4BAFf,cAGYC,EAAWJ,KAAKD,WAAhBK,OACFT,EAAeU,YAAOC,sBAAYF,EAAOG,SAASC,MAJ5D,kBAKWd,EAAgBC,IAL3B,yDAOWC,GAPX,yD,mHAWA,4BAAAK,EAAA,+EAEUD,KAAKG,4BAFf,cAGYC,EAAWJ,KAAKD,WAAhBK,OAHZ,kBAIWA,EAAOtC,MAAQsC,EAAOtC,MAAQ,2BAJzC,wF,mHAQA,8BAAAmC,EAAA,+EAEUD,KAAKG,4BAFf,cAGYC,EAAWJ,KAAKD,WAAhBK,OACFpC,EAAQoC,EAAOpC,OAASoC,EAAOK,MAJzC,kBAKWzC,EAAM0C,KALjB,sH,oHASA,8BAAAT,EAAA,+EAEUD,KAAKG,4BAFf,cAGYC,EAAWJ,KAAKD,WAAhBK,OAHZ,kBAIWA,EAAOO,QAAQD,KAAK,OAJ/B,uCAOYN,EAAWJ,KAAKD,WAAhBK,OAPZ,kBAQWA,EAAOrC,QAAUqC,EAAOQ,iBARnC,yD,kHAYA,sBAAAX,EAAA,+EAEUD,KAAKG,4BAFf,OAGIU,QAAQC,IAAId,KAAKD,YAHrB,uG,sHAOA,sBAAAE,EAAA,wFAEWc,IAAIC,gBAAgBhB,KAAKF,OAFpC,wF,qHAMA,kCAAAG,EAAA,6DACM9B,EAAkB,CAAC,GAAI,IAAK,IAAK,IAAK,IAAK,KADjD,kBAG0B6B,KAAKiB,cAH/B,cAGQC,EAHR,OAIUjD,EAAUE,EAAMgD,KAAI,SAAAC,GAAK,MAAK,CAClClD,IACEgD,IAActB,EACVsB,EACAG,IAAOH,EAAWE,EAAOA,GAC/BjD,MAAM,GAAD,OAAKiD,EAAL,YAAcA,OATzB,kBAWWnD,GAXX,uCAaUA,EAAUE,EAAMgD,KAAI,SAAAC,GAAK,MAAK,CAClClD,IAAK0B,EACLzB,MAAM,GAAD,OAAKiD,EAAL,YAAcA,OAfzB,kBAiBWnD,GAjBX,yD,sHAqBA,4BAAAgC,EAAA,+EAEUD,KAAKG,4BAFf,cAIgB5B,EACRyB,KAAKD,WADPuB,OAAU/C,SAJhB,kBAMWA,GANX,wF,6DC/Fa,SAAegD,EAA9B,kC,4CAAe,WAA2BC,GAA3B,6BAAAvB,EAAA,sDACTwB,EAAY,GAEPC,EAAI,EAHA,YAGGA,EAAIF,EAAMG,QAHb,oBAIPC,EAAW,IAAI/B,EAAS2B,EAAME,IAJvB,yCAKW,IALX,uBAOME,EAASC,WAPf,cAOPjE,EAPO,iBAQQgE,EAASX,cARjB,eAQP1B,EARO,iBASQqC,EAASE,YATjB,eASP/D,EATO,iBAUU6D,EAASG,cAVnB,QAUPxD,EAVO,OAaLyD,EAAiB,SAAAZ,GACrB,IAAMa,EAASC,KAAKC,MAAMf,EAAQ,IAC5BgB,EAAaF,KAAKC,MAAMf,EAAiB,GAATa,GACtC,MAAM,GAAN,OAAUA,EAAV,YAAoBG,EAAa,EAAb,WAAqBA,GAAeA,IAG1DX,EAAUY,KAAK,CACb/C,GAAIoC,EACJ9D,OACA2B,SACAxB,SACAQ,SAAUyD,EAAezD,KAxBhB,QAGqBmD,IAHrB,gDA4BND,GA5BM,6C,sBCSR,IASMa,EAAoB3E,YAAY,CAC3CC,KAAM,oBACNC,aAXsC,CACtC0E,MAAM,EACNC,SAAU,EACVC,QAAQ,EACRC,OAAQ,GACRC,QAAQ,EACRC,sBAAsB,GAMtBpE,SAAU,CACRqE,QAAS,SAACnE,EAAOC,GACfD,EAAM6D,KAAO5D,EAAOC,SAEtBkE,YAAa,SAACpE,EAAOC,GACnBD,EAAM8D,SAAW7D,EAAOC,SAE1BmE,UAAW,SAACrE,EAAOC,GACjBD,EAAM+D,OAAS9D,EAAOC,SAExBoE,UAAW,SAACtE,EAAOC,GACjBD,EAAMgE,OAAS/D,EAAOC,SAExBqE,UAAW,SAACvE,EAAOC,GACjBD,EAAMiE,OAAShE,EAAOC,SAExBsE,wBAAyB,SACvBxE,EACAC,GAEAD,EAAMkE,qBAAuBjE,EAAOC,YAKnC,EAOH0D,EAAkBnD,QANpB0D,EADK,EACLA,QACAC,EAFK,EAELA,YACAC,EAHK,EAGLA,UACAC,EAJK,EAILA,UACAC,EALK,EAKLA,UACAC,EANK,EAMLA,wBAGaZ,IAAf,Q,8BCzDe,OAA0B,0C,iBCa1B,SAASa,KACtB,IAAMC,EAAaC,aAAY,SAAC3E,GAAD,OAAsBA,EAAM4E,SAErDC,EAAQC,eAERC,EAAQC,aAAcH,EAAMI,YAAYC,KAAK,OAEnD,OACE,gBAACC,EAAA,EAAD,CAAOC,WAAW,SAASC,GAAI,CAAEC,MAAOP,EAAQ,MAAQ,OAAxD,UACE,eAACQ,EAAA,EAAD,UACGb,EAAW/E,SACV,sBACE6F,IAAI,8BACJhG,IAAKkF,EAAW/E,SAChB8F,UAAU,QAGZ,sBACED,IAAI,8BACJhG,IAAKkG,GACLD,UAAU,UAIhB,gBAACF,EAAA,EAAD,2BAAUb,GAAc,CAAEiB,GAAI,IAA9B,IAAoCN,GAAI,CAAEC,MAAO,QAAjD,UACE,eAACM,GAAA,EAAD,CAAYC,QAAQ,UAAUC,MAAM,iBAAiBC,WAAY,IAAjE,SACGrB,EAAWpF,QAEd,eAACsG,GAAA,EAAD,UACE,6BAAIlB,EAAWtF,UAEjB,eAACwG,GAAA,EAAD,UAAalB,EAAWrF,gB,yCCwBnB2G,IAhEYC,aAAO,MAAPA,CAAc,CACrCnC,SAAU,WACVwB,MAAO,OACPY,OAAQ,OACRC,IAAK,EACLC,KAAM,EAENC,eAAgB,sBAGhBC,WAAY,uDACZ,WAAY,CACVC,QAAS,KACTjB,MAAO,OACPY,OAAQ,OACRpC,SAAU,WACVqC,IAAK,OACLK,MAAO,QAIT,UAAW,CACTD,QAAS,KACTjB,MAAO,OACPY,OAAQ,OACRpC,SAAU,WACV2C,OAAQ,OACRL,KAAM,OAENM,UAAW,mBAIOT,aAAO,MAAPA,EAAc,kBAAGpB,EAAH,EAAGA,MAAH,2BACjCA,EAAMI,YAAYC,KAAK,MAAQ,CAC9BI,MAAO,oBAFyB,eAIjCT,EAAMI,YAAYC,KAAK,MAAQ,CAC9BI,MAAO,SALyB,yBAOzB,IAPyB,8BAQpB,IARoB,uBAS3B,QAT2B,0BAUxB,QAVwB,wBAW1B,+BAX0B,0BAYxB,YAZwB,wBAa1B,GAb0B,iCAeT,SAAvBT,EAAM8B,QAAQC,KAAkB,kBAAoB,yBAfpB,gCAgBlB,cAhBkB,KAmBVX,aAAO,MAAPA,EAAc,cAAGpB,MAAH,MAAgB,CACtDS,MAAO,OACPuB,UAAW,QACXC,SAAU,SACVC,WAAY,EACZC,aAAc,EACdC,gBAAiB,mBACjB,UAAW,CACT3B,MAAO,YAIaW,aAAOL,KAAPK,CAAmB,CACzCiB,SAAU,UACVC,QAAS,IACTpB,WAAY,IACZqB,cAAe,GACfC,WAAY,OACZC,UAAW,SAGAC,GAAgBtB,aAAOuB,KAAPvB,EAAe,gBAAGpB,EAAH,EAAGA,MAAH,MAAgB,CAC1DiB,MAA8B,SAAvBjB,EAAM8B,QAAQC,KAAkB,OAAS,mBAChDV,OAAQ,EACR,oBAAqB,CACnBZ,MAAO,EACPY,OAAQ,EACRI,WAAY,qCACZ,WAAY,CACVmB,UAAW,gCAEb,8BAA+B,CAC7BA,UAAU,mBAAD,OACgB,SAAvB5C,EAAM8B,QAAQC,KACV,yBACA,qBAGR,eAAgB,CACdtB,MAAO,GACPY,OAAQ,KAGZ,oBAAqB,CACnBiB,QAAS,SAIAO,GAAkBzB,aAAOuB,KAAPvB,EAAe,kBAAgB,CAC5DX,MAAO,MAEPQ,MAA8B,SAHc,EAAGjB,MAGlC8B,QAAQC,KAAkB,OAAS,mBAChD,qBAAsB,CACpBe,OAAQ,QAEV,qBAAsB,CACpBrC,MAAO,GACPY,OAAQ,GACRe,gBAAiB,OACjB,WAAY,CACVQ,UAAW,6BAEb,4CAA6C,CAC3CA,UAAW,aAKJG,GAAqB3B,aAAO,MAAPA,CAAc,CAC9CwB,UAAW,oCACXR,gBAAiB,wBACjBZ,eAAgB,aAChBwB,QAAS,OACTzC,WAAY,SACZ0C,eAAgB,SAChBhE,SAAU,QACVsC,KAAM,GACNK,OAAQ,GACRnB,MAAO,OACPY,OAAQ,OACR6B,UAAW,SACXC,OAAQ,EACRhB,aAAc,mBACd,wBAAyB,CACvBa,QAAS,OACTzC,WAAY,SACZ0C,eAAgB,SAChBd,aAAc,mBACdlB,MAAO,OACPR,MAAO,OACPY,OAAQ,OACR+B,OAAQ,WAEV,gBAAiB,CACfJ,QAAS,QAEX,QAAS,CACPX,SAAU,UAaDgB,GAAWjC,aAAOkC,KAAPlC,EAAa,kBAAGpB,EAAH,EAAGA,MAAH,2BAClCA,EAAMI,YAAYC,KAAK,MAAQ,CAC9BI,MAAO,QAF0B,eAIlCT,EAAMI,YAAYC,KAAK,MAAQ,CAC9BI,MAAO,QAL0B,0BAOzB,QAPyB,8BAQrB,uBARqB,wBAS3B,SAT2B,uBAU5B,OAV4B,KAafW,aAAOmC,IAAPnC,EAAiB,cAAGpB,MAAH,MAAgB,CACrDiB,MAAO,kBACPoB,SAAU,QACV5B,MAAO,WC/KM,SAAS+C,GAAT,GAA2B,IAAVzD,EAAS,EAATA,MACxBF,EAAaC,aAAY,SAAC3E,GAAD,OAAsBA,EAAM4E,SACrD0D,EAAoB3D,aACxB,SAAC3E,GAAD,OAAsBA,EAAMuI,gBAExBC,EAAWC,cAEjB,SAASnF,EAAeZ,GACtB,IAAMa,EAASC,KAAKC,MAAMf,EAAQ,IAC5BgB,EAAahB,EAAiB,GAATa,EAC3B,MAAM,GAAN,OAAUA,EAAV,YAAoBG,EAAa,EAAb,WAAqBA,GAAeA,GAG1D,OACE,gBAACyB,EAAA,EAAD,yBACEC,WAAW,SACXC,GAAI,CAAEC,MAAO,QACRZ,GAAc,CAAEiB,GAAI,IAH3B,cAKE,eAAC4B,GAAD,CACE,aAAW,iBACXmB,KAAK,QACLhG,MAAO4F,EAAkBxE,SACzB6E,IAAK,EACLC,KAAM,EACNC,IAAKnE,EAAW7E,SAChBiJ,SAAU,SAACC,EAAGrG,GACZ8F,EAASpE,GAAa1B,IAEtBkC,EAAMoE,QAAQC,aAAevG,KAGjC,gBAACyC,EAAA,EAAD,CACE+D,UAAU,MACV9D,WAAW,SACX0C,eAAe,gBACfzC,GAAI,CAAEC,MAAO,QAJf,UAME,eAACU,GAAD,UACG1C,EAAeE,KAAKC,MAAM6E,EAAkBxE,aAE/C,gBAACkC,GAAD,eAEG1C,EACCE,KAAKC,MAAMiB,EAAW7E,UACpB2D,KAAKC,MAAM6E,EAAkBxE,qB,aCpDrCqF,GAASC,SAASC,cAAc,UACtCF,GAAO7D,MAAQ6D,GAAOjD,OAAS,IAE/B,IAAMoD,GAAQF,SAASC,cAAc,S,8CAItB,WAA0CE,GAA1C,eAAAhI,EAAA,0DACTgI,EADS,wBAELC,EAAQ,IAAIC,OACZC,aAAc,EACpBF,EAAMhK,IAAM,aAAImK,UAAUC,aAAaC,SAAStK,SAASuK,MAAMtK,IAJpD,SAKLgK,EAAMO,SALD,cAMXZ,GAAOa,WAAW,MAAMC,UAAUT,EAAO,EAAG,EAAG,IAAK,KANzC,SAOLF,GAAMY,OAPD,wBAQLZ,GAAMa,0BARD,2DAWHf,SAASgB,uBAXN,uH,sBAHfd,GAAMe,UAAYlB,GAAOmB,gBACzBhB,GAAMiB,OAAQ,E,iKCaC,SAASC,GAAT,GAAyC,IAAtB5F,EAAqB,EAArBA,MAAO6F,EAAc,EAAdA,WACjCnC,EAAoB3D,aACxB,SAAC3E,GAAD,OAAsBA,EAAMuI,gBAExBC,EAAWC,cAGXiC,EAAuC,SAF/B5F,eAEc6B,QAAQC,KAAkB,OAAS,OAE/D,OACE,gBAACzB,EAAA,EAAD,CAAO+D,UAAU,MAAMpB,eAAe,gBAAtC,UACE,eAAC6C,GAAA,EAAD,CACEC,QAAS,WACPpC,EAASjE,GAAW+D,EAAkBrE,SACtCqE,EAAkBrE,OACbW,EAAMoE,QAAQ6B,aAAe,EAC7BjG,EAAMoE,QAAQ6B,aAAe,GAEpC/E,MAAOwC,EAAkBrE,OAAS,UAAY,UAPhD,SASE,eAAC,KAAD,MAEF,eAAC0G,GAAA,EAAD,CACE,aAAW,gBACXC,QAAS,WACPH,EAAW,CAAE/K,KAAM,UAHvB,SAME,eAAC,KAAD,CAAmBwH,SAAS,QAAQ4D,UAAWJ,MAEjD,eAACC,GAAA,EAAD,CACE,aAAYrC,EAAkBvE,OAAS,OAAS,QAChD6G,QAAS,WACkB,IAArBhG,EAAMoE,QAAQxJ,MAChBgJ,EAASnE,GAAWiE,EAAkBvE,SAEtCuE,EAAkBvE,OACda,EAAMoE,QAAQkB,OACdtF,EAAMoE,QAAQ+B,UAGtB1F,GAAI,CAAEoC,UAAW,qCAXnB,SAaGa,EAAkBvE,OACjB,eAAC,KAAD,CACEsB,GAAI,CAAE6B,SAAU,QAChB4D,UAAWJ,IAGb,eAAC,KAAD,CAAcrF,GAAI,CAAE6B,SAAU,QAAU4D,UAAWJ,MAGvD,eAACC,GAAA,EAAD,CACE,aAAW,YACXC,QAAS,WACPH,EAAW,CAAE/K,KAAM,UAHvB,SAME,eAAC,KAAD,CAAoBwH,SAAS,QAAQ4D,UAAWJ,MAElD,eAACC,GAAA,EAAD,CACEC,QAAS,WACPpC,EAASrE,GAASmE,EAAkBzE,QAEtCiC,MAAOwC,EAAkBzE,KAAO,UAAY,UAJ9C,SAME,eAAC,KAAD,MAEF,eAAC8G,GAAA,EAAD,CACEC,QAAS,YDhFF,SAAf,4BCiFUI,EAA4B1C,EAAkBpE,sBAC9CsE,EACEhE,GAAyB8D,EAAkBpE,wBAG/C4B,MAAOwC,EAAkBpE,qBAAuB,UAAY,UAP9D,SASE,eAAC,KAAD,S,8CCrFO,SAAS+G,KACtB,IAAM3C,EAAoB3D,aACxB,SAAC3E,GAAD,OAAsBA,EAAMuI,gBAExBC,EAAWC,cAGXyC,EACmB,SAHXpG,eAGN6B,QAAQC,KAAkB,wBAA0B,kBAC5D,OACE,gBAACzB,EAAA,EAAD,CACE+D,UAAU,MACVpB,eAAe,SACf1C,WAAW,SACX+F,QAAS,EACT9F,GAAI,CAAEC,MAAO,OAAQK,GAAI,EAAGyF,GAAI,GALlC,UAOE,eAAC,KAAD,CAAmBN,UAAWI,IAC9B,eAACxD,GAAD,CACE,aAAW,SACXhF,MAAO4F,EAAkBtE,OACzB8E,SAAU,SAACuC,GACT7C,EAASlE,EAAU+G,EAAEC,OAAO5I,WAGhC,eAAC,KAAD,CAAiBoI,UAAWI,OCtBnB,SAASK,GAAT,GAA6C,IAAtB3G,EAAqB,EAArBA,MAAO6F,EAAc,EAAdA,WAErCjC,EAAWC,cAGXH,EAAoB3D,aACxB,SAAC3E,GAAD,OAAsBA,EAAMuI,gBA+C9B,OApCAiD,aAAgB,WACQ,OAAlB5G,EAAMoE,UACRpE,EAAMoE,QAAQyC,iBAAiB,kBAAkB,SAAAJ,GAC/C7C,EAASzI,EAAYyD,KAAKC,MAAM4H,EAAEC,OAAOzL,YAEzC2I,EAASnE,GAAU,OAGrBO,EAAMoE,QAAQyC,iBACZ,cACA,SAAAC,GACElD,EAASpE,EAAYsH,EAAMC,KAAK,GAAG1C,iBAErC,MAeH,IAGHuC,aAAgB,WACO,MAAjB5G,EAAMoE,UACRpE,EAAMoE,QAAQhF,OAASsE,EAAkBtE,OAAS,OACnD,CAACsE,EAAkBtE,SAGpB,gBAACmB,EAAA,EAAD,CACEC,WAAW,SACXC,GAAI,CACFC,MAAO,MACPwB,SAAU,SACVG,gBAAiB,OACjBD,aAAc,OACd4E,QAAS,SACTnE,UAAW,qCARf,UAYE,eAAChD,GAAD,IAEA,eAAC,GAAD,CAAeG,MAAOA,IAEtB,eAAC4F,GAAD,CAAS5F,MAAOA,EAAO6F,WAAYA,IAEnC,eAACQ,GAAD,O,yBC9CS,SAASY,KACtB,IAAMjH,EAAQkH,iBAAO,MACftD,EAAWC,cAEX/D,EAAaC,aAAY,SAAC3E,GAAD,OAAsBA,EAAM4E,SAQrD0D,EAAoB3D,aACxB,SAAC3E,GAAD,OAAsBA,EAAMuI,gBAI9B,EAAgCwD,mBAAS,MAAzC,mBAAO7I,EAAP,KAAiB8I,EAAjB,KACA,EAA0BD,mBAAS,IAAnC,mBAAOjJ,EAAP,KAAcmJ,EAAd,KAEMC,EAAiBvH,aAAY,SAAC3E,GAAD,OAAsBA,EAAMU,aA2B/D,MAA6CyL,sBArB7C,SAA6BnM,EAAcC,GACzC,OAAQA,EAAOP,MACb,IAAK,OACH,OAAO,2BACFM,GADL,IAEEoM,OAAQ,OACRxL,GAAIsL,EAAevL,eAAiB,IAGxC,IAAK,OACH,OAAO,2BACFX,GADL,IAEEoM,OAAQ,OACRxL,GAAIsL,EAAevL,eAAiB,IAGxC,QACE,OAAOX,KAIgE,CAC3EY,GAAI,KACJwL,OAAQ,OAFV,mBAAOC,EAAP,KAAqBC,EAArB,KAKMC,EAAcC,uBAClB,SAAA7L,GACO2H,EAAkBzE,MACjBf,GAAuC,IAA9B2J,OAAOC,KAAK5J,GAAOG,QAE1BH,EAAMG,OAAS,GAAKtC,GACtBgM,EAAgBhM,EAAiB,KAKzC,CAACmC,IAGH8J,qBAAU,WACJ9J,IACyB,QAAvBuJ,EAAaD,OAEXtJ,EAAMG,OAAS,GAAKiJ,EAAevL,eACrCgM,EAAgBT,EAAevL,eAAiB,GAEhDgM,EAAgB,GAEc,QAAvBN,EAAaD,SAEe,GAAjCF,EAAevL,eACjBgM,EAAgBT,EAAevL,eAAiB,GAGhDgM,EAAgB7J,EAAMG,OAAS,OAIpC,CAACoJ,IAEJ,IAAMQ,EAAcL,sBAAW,uCAAC,WAAMnB,GAAN,SAAA9J,EAAA,sDAC1B8J,EAAEC,OAAOxI,MAAMG,SACjBJ,EAAYwI,EAAEC,OAAOxI,OAAOgK,MAAK,SAAAC,GAE/BvE,EAASzH,EAAagM,OAExBd,EAASZ,EAAEC,OAAOxI,OAClB0F,EAASwE,EAAW,IACpBhB,EAAY,IAAI7K,EAASkK,EAAEC,OAAOxI,MAAM,MARZ,2CAAD,sDAU5B,IAEG6J,EAAkBH,uBACtB,SAAC5L,GACKkC,IACF0F,EAASwE,EAAWC,OAAOrM,KAC3BoL,EAAY,IAAI7K,EAAS2B,EAAMmK,OAAOrM,SAG1C,CAACkC,IAoCH,OAjCA8J,qBAAU,WACH1J,IAOLA,EAASC,WAAW2J,MAAK,SAAA1N,GAAK,OAAIoJ,EAASrI,EAASf,OACpD8D,EAASE,YAAY0J,MAAK,SAAAzN,GAAM,OAAImJ,EAASpI,EAAUf,OACvD6D,EAASgK,WAAWJ,MAAK,SAAAK,GAAK,OAAI3E,EAASnI,EAAS8M,OACpDjK,EAASkK,cAAcN,MAAK,SAAAlN,GAAQ,OAAI4I,EAASjI,EAAYX,OAC7DsD,EAASX,cAAcuK,MAAK,SAAAnN,GAAQ,OAAI6I,EAASlI,EAAYX,OAC7DuD,EAASmK,aAAaP,MAAK,SAAAvN,GAAO,OAAIiJ,EAAShI,EAAWjB,OAC1D2D,EAASoK,UAAUR,KAAK3K,QAAQC,QAC/B,CAACc,IAEJ0J,qBAAU,WAEN,iBAAkBjD,WAClBjF,EAAWtF,OACXsF,EAAWrF,QACXqF,EAAWnF,UAEXoK,UAAUC,aAAaC,SAAW,IAAI0D,cAAc,CAClDnO,MAAOsF,EAAWtF,MAClBC,OAAQqF,EAAWrF,OACnBmO,MAAO9I,EAAWpF,MAClBC,QAASmF,EAAWnF,aAGvB,CAACmF,EAAWnF,UAIb,cADA,CACCgG,EAAA,EAAD,CAAKF,GAAI,CAAEgB,eAAgB,uBAA3B,SACE,gBAAClB,EAAA,EAAD,CACEsI,MAAO,CACLvH,OAAQ,QACR2B,QAAS,OACTZ,gBAAiB,sBAJrB,UAOE,wBACEzH,IAAKkF,EAAW9E,SAChB8N,IAAK9I,EACLf,KAAMyE,EAAkBzE,KACxB8J,QAAS,WACPpB,EAAYL,EAAevL,iBAE7BiN,UAAQ,IAGV,gBAACC,EAAA,EAAD,CACEC,WAAS,EACT5E,UAAU,MACVpB,eAAe,eACf1C,WAAW,SACXC,GAAI,CAAEa,OAAQ,QALhB,UAOE,eAACqF,GAAD,CAAmB3G,MAAOA,EAAO6F,WAAY6B,IAC7C,eAACpE,GAAD,UACGpF,EACCoJ,EAAexL,UAAU+B,KACvB,SAAAsL,GAAI,OACY,OAAdA,EAAK7O,MACH,eAACkJ,EAAA,EAAD,CACE,UAAS2F,EAAKnN,GAEdyE,GAAI,CACFS,MAAO,QACPmB,gBAAiB,QACjB+G,UAAW,iBACX9G,SAAU,QACV5B,MAAO,MACPY,OAAQ,OACR+H,OAAQ,SACRnK,SAAU,WAGVwD,UAAW,OACXK,OAAQ,OACRX,aAAc,OACd,UAAW,CACTC,gBAAiB,sBAEnB,UAAW,CACTA,gBAAiB,uBAGrB2D,QAAS,SAACS,GACRsB,EAAgBtB,EAAEC,OAAO4C,aAAa,aAExCC,QAAM,EA3BR,SA6BE,+BACE,gBAAChJ,EAAA,EAAD,CACEE,GAAI,CACFwC,QAAS,OACTuG,cAAe,MACfC,SAAU,SACVjJ,WAAY,UALhB,UASE,qBAAIK,UAAU,aAAd,SAA4BsI,EAAKnN,GAAK,IACtC,sBAAK6E,UAAU,KAAf,SACmB,OAAhBsI,EAAKlN,QACJ,sBACErB,IAAKuO,EAAKlN,OACV2E,IAAI,SACJF,MAAM,OACNY,OAAO,OACPuH,MAAO,CAAEzG,aAAc,WAI7B,qBAAIvB,UAAU,KAAd,SAAoBsI,EAAK7O,OACzB,qBAAIuG,UAAU,KAAd,SAAoBsI,EAAK1O,SACzB,qBAAIoG,UAAU,KAAd,SAAoBsI,EAAKlO,iBAnDxBkO,EAAKnN,OA0DlB,iDAIN,eAAC2E,EAAA,EAAD,UACE,gBAACqC,GAAD,WACE,wBACEnC,UAAU,aACV7E,GAAG,YACHlB,KAAK,OACLoJ,SAAU+D,EACVyB,OAAO,UACPC,UAAQ,IAEV,wBAAOC,QAAQ,YAAY/I,UAAU,qBAArC,SACE,eAAC,KAAD,CAASJ,GAAI,CAAES,MAAO,sB,iCCjSrB,OAA0B,iCCOnC2I,GAAcxI,aAAOyI,KAAPzI,CAAe,CACjCiB,SAAU,SACVW,QAAS,OACT8G,YAAa,SACbV,OAAQ,aACRW,WAAY,sBAGRC,GAAe5I,aAAOL,KAAPK,CAAmB,CACtCH,MAAO,SACPgJ,WAAY,UACZxH,UAAW,UAGE,SAASyH,KACtB,IAAMC,EAAWC,eAGjB,OAEE,eADA,CACC9J,EAAA,EAAD,CACEE,GAAI,CACF6J,gBAAgB,QAAD,OAAUC,GAAV,MACf7J,MAAO,OACPY,OAAQ,QACR+H,OAAQ,QALZ,UAQE,eAACY,GAAD,CAAcO,MAAM,SAASvJ,QAAQ,KAArC,qBAGA,eAAC4I,GAAD,CACE5I,QAAQ,YACR+E,QAAS,WAEPoE,EAAS,WAJb,4BCpBSK,OAbf,WAGE,OACE,qCACE,gBAAC,KAAD,WACE,eAAC,KAAD,CAAO1D,KAAK,IAAI2D,QAAS,eAACP,GAAD,MACzB,eAAC,KAAD,CAAOpD,KAAK,SAAS2D,QAAS,eAACzD,GAAD,Y,SCPzB0D,GAAQC,YAAe,CAClCC,QAAS,CACP7K,MAAO8K,EACPnH,aAAc3E,EACdlD,UAAWiP,K,iBCIfC,IAASC,OAOP,eAAC,iBAAD,CAAeC,kBClBF,YAAkD,IAA9BC,EAA6B,EAA7BA,MAAOC,EAAsB,EAAtBA,mBACxC,OACE,2BAASvK,UAAU,QAAnB,UACE,sBAAKA,UAAU,eAAf,SACE,8BAAKsK,EAAME,YAEb,uBAAKxK,UAAU,gBAAf,UACE,oDACA,sFACA,yBAAQA,UAAU,WAAWmF,QAASoF,EAAoBE,KAAM,OAAhE,2BDSN,SACE,eAAC,IAAD,CAAUX,MAAOA,GAAjB,SACE,eAAC,KAAD,UACE,eAAC,GAAD,UAMNnG,SAAS+G,cAAc,Y","file":"static/js/main.16773783.chunk.js","sourcesContent":["import { createSlice, PayloadAction } from '@reduxjs/toolkit'\r\n\r\nexport interface AudioState {\r\n  title: string | null,\r\n  artist: string | null,\r\n  genre: string | null,\r\n  artwork: [\r\n    {\r\n      src: string | null,\r\n      sizes: string | null,\r\n      type: string | null,\r\n    },\r\n  ],\r\n  imageSrc: string | null,\r\n  audioSrc: string | null,\r\n  duration: number | null,\r\n}\r\n\r\nexport const initialState: AudioState = {\r\n  title: null,\r\n  artist: null,\r\n  genre: null,\r\n  artwork: [\r\n    {\r\n      src: null,\r\n      sizes: null,\r\n      type: null,\r\n    },\r\n  ],\r\n  imageSrc: null,\r\n  audioSrc: null,\r\n  duration: 200,\r\n}\r\n\r\nexport const audioData = createSlice({\r\n  name: 'audioData',\r\n  initialState,\r\n  reducers: {\r\n    setDuration: (state, action: PayloadAction<AudioState['duration']>) => {\r\n      state.duration = action.payload\r\n    },\r\n    setTitle: (state, action: PayloadAction<AudioState['title']>) => {\r\n      state.title = action.payload\r\n    },\r\n    setArtist: (state, action: PayloadAction<AudioState['artist']>) => {\r\n      state.artist = action.payload\r\n    },\r\n    setGenre: (state, action: PayloadAction<AudioState['genre']>) => {\r\n      state.genre = action.payload\r\n    },\r\n    setImageSrc: (state, action: PayloadAction<AudioState['imageSrc']>) => {\r\n      state.imageSrc = action.payload\r\n    },\r\n    setAudioSrc: (state, action: PayloadAction<AudioState['audioSrc']>) => {\r\n      state.audioSrc = action.payload\r\n    },\r\n    setArtwork: (state, action: PayloadAction<AudioState['artwork']>) => {\r\n      state.artwork = action.payload\r\n    },\r\n  },\r\n})\r\n\r\nexport const {\r\n  setTitle,\r\n  setArtist,\r\n  setGenre,\r\n  setImageSrc,\r\n  setAudioSrc,\r\n  setArtwork,\r\n  setDuration,\r\n} = audioData.actions\r\n\r\nexport default audioData.reducer\r\n","import { createSlice, PayloadAction } from '@reduxjs/toolkit'\r\n\r\nexport interface AudioState {\r\n  playingAudioId: number | null,\r\n  audioList: [\r\n    {\r\n      id: number | null,\r\n      name: string | null,\r\n      imgSrc: string | null,\r\n      artist: string | null,\r\n      duration: string | null,\r\n    },\r\n  ]\r\n}\r\n\r\nexport const initialState: AudioState = {\r\n  playingAudioId: null,\r\n  audioList: [\r\n    {\r\n      id: null,\r\n      name: null,\r\n      imgSrc: null,\r\n      artist: null,\r\n      duration: null,\r\n    },\r\n  ],\r\n}\r\n\r\nexport const audioList = createSlice({\r\n  name: 'audioList',\r\n  initialState,\r\n  reducers: {\r\n    playingAudio: (\r\n      state,\r\n      action: PayloadAction<AudioState['playingAudioId']>,\r\n    ) => {\r\n      state.playingAudioId = action.payload\r\n    },\r\n    setAudioList: (state, action: PayloadAction<AudioState['audioList']>) => {\r\n      state.audioList = action.payload\r\n    },\r\n  },\r\n})\r\n\r\nexport const { playingAudio, setAudioList } = audioList.actions\r\n\r\nexport default audioList.reducer\r\n","import { parseBlob, selectCover } from 'music-metadata-browser'\r\nimport { encode } from 'base64-arraybuffer'\r\nimport resize from 'resize-base64'\r\n\r\nconst getImgBase64Src = (base64String: string) =>\r\n  `data:image/jpg;base64, ${base64String}`\r\n\r\nconst DEFAULT_IMG_SRC =\r\n  'https://images.unsplash.com/photo-1505740420928-5e560c06d30e?ixlib=rb-1.2.1&ixid=MnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8&auto=format&fit=crop&w=360&q=80'\r\n\r\nexport default class MetaData {\r\n  file: File = null\r\n  parsedBlob = null\r\n  constructor(file: File) {\r\n    this.file = file\r\n  }\r\n\r\n  async initiateMusicMetaDataBlob() {\r\n    try {\r\n      if (!this.parsedBlob) this.parsedBlob = await parseBlob(this.file)\r\n    } catch (error) {}\r\n  }\r\n\r\n  async getImageSrc() {\r\n    try {\r\n      await this.initiateMusicMetaDataBlob()\r\n      const { common } = this.parsedBlob\r\n      const base64String = encode(selectCover(common.picture).data)\r\n      return getImgBase64Src(base64String)\r\n    } catch {\r\n      return DEFAULT_IMG_SRC\r\n    }\r\n  }\r\n\r\n  async getTitle() {\r\n    try {\r\n      await this.initiateMusicMetaDataBlob()\r\n      const { common } = this.parsedBlob\r\n      return common.title ? common.title : 'Music name is undefined'\r\n    } catch {}\r\n  }\r\n\r\n  async getGenre() {\r\n    try {\r\n      await this.initiateMusicMetaDataBlob()\r\n      const { common } = this.parsedBlob\r\n      const genre = common.genre || common.label\r\n      return genre.join`, `\r\n    } catch {}\r\n  }\r\n\r\n  async getArtist() {\r\n    try {\r\n      await this.initiateMusicMetaDataBlob()\r\n      const { common } = this.parsedBlob\r\n      return common.artists.join(', ')\r\n    } catch {\r\n      // fallback strategy on not good match\r\n      const { common } = this.parsedBlob\r\n      return common.artist || common.albumartistsort\r\n    }\r\n  }\r\n\r\n  async getInfo() {\r\n    try {\r\n      await this.initiateMusicMetaDataBlob()\r\n      console.log(this.parsedBlob)\r\n    } catch {}\r\n  }\r\n\r\n  async getAudioSrc() {\r\n    try {\r\n      return URL.createObjectURL(this.file)\r\n    } catch (error) {}\r\n  }\r\n\r\n  async getArtwork() {\r\n    let sizes: number[] = [96, 128, 192, 256, 384, 512]\r\n    try {\r\n      let dataImage = await this.getImageSrc()\r\n      const artwork = sizes.map(value => ({\r\n        src:\r\n          dataImage === DEFAULT_IMG_SRC\r\n            ? dataImage\r\n            : resize(dataImage, value, value),\r\n        sizes: `${value}x${value}`,\r\n      }))\r\n      return artwork\r\n    } catch (error) {\r\n      const artwork = sizes.map(value => ({\r\n        src: DEFAULT_IMG_SRC,\r\n        sizes: `${value}x${value}`,\r\n      }))\r\n      return artwork\r\n    }\r\n  }\r\n\r\n  async getDuration() {\r\n    try {\r\n      await this.initiateMusicMetaDataBlob()\r\n      const {\r\n        format: { duration },\r\n      } = this.parsedBlob\r\n      return duration\r\n    } catch {}\r\n  }\r\n}\r\n","import MetaData from './../services/meta-data'\r\n\r\nexport default async function getFileList(files) {\r\n  let filedInfo = []\r\n\r\n  for (let i = 0; i < files.length; i++) {\r\n    let metaData = new MetaData(files[i])\r\n    if (!metaData) return []\r\n\r\n    let name = await metaData.getTitle()\r\n    let imgSrc = await metaData.getImageSrc()\r\n    let artist = await metaData.getArtist()\r\n    let duration = await metaData.getDuration()\r\n\r\n    //* Duration display\r\n    const formatDuration = value => {\r\n      const minute = Math.floor(value / 60)\r\n      const secondLeft = Math.floor(value - minute * 60)\r\n      return `${minute}:${secondLeft < 9 ? `0${secondLeft}` : secondLeft}`\r\n    }\r\n\r\n    filedInfo.push({\r\n      id: i,\r\n      name,\r\n      imgSrc,\r\n      artist,\r\n      duration: formatDuration(duration),\r\n    })\r\n  }\r\n\r\n  return filedInfo\r\n}\r\n","import { createSlice, PayloadAction } from '@reduxjs/toolkit'\r\n\r\nexport interface AudioState {\r\n  loop: boolean,\r\n  position: number,\r\n  paused: boolean,\r\n  volume: number,\r\n  faster: boolean,\r\n  pictureInPictureMode: boolean\r\n}\r\n\r\nexport const initialState: AudioState = {\r\n  loop: false,\r\n  position: 0,\r\n  paused: true,\r\n  volume: 30,\r\n  faster: false,\r\n  pictureInPictureMode: false,\r\n}\r\n\r\nexport const audioControlSlice = createSlice({\r\n  name: 'audioControlSlice',\r\n  initialState,\r\n  reducers: {\r\n    setLoop: (state, action: PayloadAction<AudioState['loop']>) => {\r\n      state.loop = action.payload\r\n    },\r\n    setPosition: (state, action: PayloadAction<AudioState['position']>) => {\r\n      state.position = action.payload\r\n    },\r\n    setPaused: (state, action: PayloadAction<AudioState['paused']>) => {\r\n      state.paused = action.payload\r\n    },\r\n    setVolume: (state, action: PayloadAction<AudioState['volume']>) => {\r\n      state.volume = action.payload\r\n    },\r\n    setFaster: (state, action: PayloadAction<AudioState['faster']>) => {\r\n      state.faster = action.payload\r\n    },\r\n    setPictureInPictureMode: (\r\n      state,\r\n      action: PayloadAction<AudioState['pictureInPictureMode']>,\r\n    ) => {\r\n      state.pictureInPictureMode = action.payload\r\n    },\r\n  },\r\n})\r\n\r\nexport const {\r\n  setLoop,\r\n  setPosition,\r\n  setPaused,\r\n  setVolume,\r\n  setFaster,\r\n  setPictureInPictureMode,\r\n} = audioControlSlice.actions\r\n\r\nexport default audioControlSlice.reducer\r\n","export default __webpack_public_path__ + \"static/media/default_image.6c6c1488.jpg\";","import { useSelector } from 'react-redux'\r\nimport { RootState } from '../../store'\r\n\r\nimport Box from '@mui/material/Box'\r\nimport Stack from '@mui/material/Stack'\r\nimport Typography from '@mui/material/Typography'\r\nimport { useTheme } from '@mui/material/styles'\r\nimport useMediaQuery from '@mui/material/useMediaQuery'\r\n\r\nimport DefaultImage from '../../img/default_image.jpg'\r\n\r\nimport '../app-style.css'\r\n\r\nexport default function Cover() {\r\n  const audioState = useSelector((state: RootState) => state.audio)\r\n\r\n  const theme = useTheme()\r\n\r\n  const match = useMediaQuery(theme.breakpoints.down('sm'))\r\n\r\n  return (\r\n    <Stack alignItems=\"center\" sx={{ width: match ? '70%' : '40%' }}>\r\n      <Box>\r\n        {audioState.imageSrc ? (\r\n          <img\r\n            alt=\"can't win - Chilling Sunday\"\r\n            src={audioState.imageSrc}\r\n            className=\"img\"\r\n          />\r\n        ) : (\r\n          <img\r\n            alt=\"can't win - Chilling Sunday\"\r\n            src={DefaultImage}\r\n            className=\"img\"\r\n          />\r\n        )}\r\n      </Box>\r\n      <Box {...(audioState && { mt: 1 })} sx={{ width: '100%' }}>\r\n        <Typography variant=\"caption\" color=\"text.secondary\" fontWeight={500}>\r\n          {audioState.genre}\r\n        </Typography>\r\n        <Typography>\r\n          <b>{audioState.title}</b>\r\n        </Typography>\r\n        <Typography>{audioState.artist}</Typography>\r\n      </Box>\r\n    </Stack>\r\n  )\r\n}\r\n","import { List, ListItem, Slider } from '@mui/material'\r\nimport { styled } from '@mui/material/styles'\r\nimport Typography from '@mui/material/Typography'\r\n\r\nexport const WallPaper = styled('div')({\r\n  position: 'absolute',\r\n  width: '100%',\r\n  height: '100%',\r\n  top: 0,\r\n  left: 0,\r\n\r\n  backdropFilter: 'blur(6px)!important',\r\n  // zIndex:99,\r\n  // backgroundImage:`url(${IMG1})`,\r\n  transition: 'all 500ms cubic-bezier(0.175, 0.885, 0.32, 1.275) 0s',\r\n  '&:before': {\r\n    content: '\"\"',\r\n    width: '140%',\r\n    height: '140%',\r\n    position: 'absolute',\r\n    top: '-40%',\r\n    right: '-50%',\r\n\r\n    // backgroundImage:`url(${IMG1})`,\r\n  },\r\n  '&:after': {\r\n    content: '\"\"',\r\n    width: '140%',\r\n    height: '140%',\r\n    position: 'absolute',\r\n    bottom: '-50%',\r\n    left: '-30%',\r\n    // backgroundImage:`url(${IMG1})`,\r\n    transform: 'rotate(30deg)',\r\n  },\r\n})\r\n\r\nexport const Widget = styled('div')(({ theme }) => ({\r\n  [theme.breakpoints.down('sm')]: {\r\n    width: '90vw !important',\r\n  },\r\n  [theme.breakpoints.down('md')]: {\r\n    width: '50vw',\r\n  },\r\n  padding: 16,\r\n  borderRadius: 16,\r\n  width: '35vw',\r\n  maxWidth: '100%',\r\n  margin: '50px auto 0 auto !important',\r\n  position: 'relative',\r\n  zIndex: 1,\r\n  backgroundColor:\r\n    theme.palette.mode === 'dark' ? 'rgba(0,0,0,0.6)' : 'rgba(255,255,255,0.4)',\r\n  backdropFilter: 'blur(40px)',\r\n}))\r\n\r\nexport const CoverImage = styled('div')(({ theme }) => ({\r\n  width: '100%',\r\n  objectFit: 'cover',\r\n  overflow: 'hidden',\r\n  flexShrink: 0,\r\n  borderRadius: 8,\r\n  backgroundColor: 'rgba(0,0,0,0.08)',\r\n  '& > img': {\r\n    width: '100%',\r\n  },\r\n}))\r\n\r\nexport const TinyText = styled(Typography)({\r\n  fontSize: '0.75rem',\r\n  opacity: 0.38,\r\n  fontWeight: 500,\r\n  letterSpacing: 0.2,\r\n  marginLeft: '10px',\r\n  marginTop: '5px',\r\n})\r\n\r\nexport const TimeIndicator = styled(Slider)(({ theme }) => ({\r\n  color: theme.palette.mode === 'dark' ? '#fff' : 'rgba(0,0,0,0.87)',\r\n  height: 4,\r\n  '&.MuiSlider-thumb': {\r\n    width: 8,\r\n    height: 8,\r\n    transition: '0.3s cubic-bezier(.47,1.64,.41,.8)',\r\n    '&:before': {\r\n      boxShadow: '0 2px 12px 0 rgba(0,0,0,0.4)',\r\n    },\r\n    '&:hover, &.Mui-focusVisible': {\r\n      boxShadow: `0px 0px 0px 8px ${\r\n        theme.palette.mode === 'dark'\r\n          ? 'rgb(255 255 255 / 16%)'\r\n          : 'rgb(0 0 0 / 16%)'\r\n      }`,\r\n    },\r\n    '&.Mui-active': {\r\n      width: 20,\r\n      height: 20,\r\n    },\r\n  },\r\n  '& .MuiSlider-rail': {\r\n    opacity: 0.28,\r\n  },\r\n}))\r\n\r\nexport const VolumeIndicator = styled(Slider)(({ theme }) => ({\r\n  width: '30%',\r\n\r\n  color: theme.palette.mode === 'dark' ? '#fff' : 'rgba(0,0,0,0.87)',\r\n  '& .MuiSlider-track': {\r\n    border: 'none',\r\n  },\r\n  '& .MuiSlider-thumb': {\r\n    width: 24,\r\n    height: 24,\r\n    backgroundColor: '#fff',\r\n    '&:before': {\r\n      boxShadow: '0 4px 8px rgba(0,0,0,0.4)',\r\n    },\r\n    '&:hover, &.Mui-focusVisible, &.Mui-active': {\r\n      boxShadow: 'none',\r\n    },\r\n  },\r\n}))\r\n\r\nexport const InputFileContainer = styled('div')({\r\n  boxShadow: '0px 0px 10px 2px rgba(0,0,0,0.28)',\r\n  backgroundColor: 'rgba(255,255,255,0.4)',\r\n  backdropFilter: 'blur(40px)',\r\n  display: 'flex',\r\n  alignItems: 'center',\r\n  justifyContent: 'center',\r\n  position: 'fixed',\r\n  left: 20,\r\n  bottom: 20,\r\n  width: '60px',\r\n  height: '60px',\r\n  textAlign: 'center',\r\n  zIndex: 5,\r\n  borderRadius: '500px !important',\r\n  '& .input-file-trigger': {\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    justifyContent: 'center',\r\n    borderRadius: '500px !important',\r\n    color: '#fff',\r\n    width: '100%',\r\n    height: '100%',\r\n    cursor: 'pointer',\r\n  },\r\n  '& .input-file': {\r\n    display: 'none',\r\n  },\r\n  '& svg': {\r\n    fontSize: '38px',\r\n  },\r\n})\r\n\r\n// export const MyBox = styled(Box)(({ theme }) => ({\r\n//   [theme.breakpoints.down('md')]: {\r\n//     display: 'flex',\r\n//     flexWrap: 'wrap',\r\n//   },\r\n\r\n//   display: 'flex',\r\n// }))\r\n\r\nexport const PlayList = styled(List)(({ theme }) => ({\r\n  [theme.breakpoints.down('md')]: {\r\n    width: '60%',\r\n  },\r\n  [theme.breakpoints.down('sm')]: {\r\n    width: '80%',\r\n  },\r\n  overflow: 'auto',\r\n  borderRadius: '15px 15px 15px 15px',\r\n  height: '550px',\r\n  width: '50%',\r\n}))\r\n\r\nexport const MyItem = styled(ListItem)(({ theme }) => ({\r\n  color: 'rgb(128, 76, 9)',\r\n  fontSize: 'large',\r\n  width: '100%',\r\n}))\r\n","import { useSelector, useDispatch } from 'react-redux'\r\nimport { setPosition } from '../../slices/audioControlSlice'\r\nimport { AppDispatch, RootState } from '../../store'\r\n\r\nimport Stack from '@mui/material/Stack'\r\nimport { TimeIndicator, TinyText } from '../player-components'\r\n\r\nexport default function Timer({ audio }) {\r\n  const audioState = useSelector((state: RootState) => state.audio)\r\n  const audioControlState = useSelector(\r\n    (state: RootState) => state.audioControl,\r\n  )\r\n  const dispatch = useDispatch<AppDispatch>()\r\n\r\n  function formatDuration(value: number) {\r\n    const minute = Math.floor(value / 60)\r\n    const secondLeft = value - minute * 60\r\n    return `${minute}:${secondLeft < 9 ? `0${secondLeft}` : secondLeft}`\r\n  }\r\n\r\n  return (\r\n    <Stack\r\n      alignItems=\"center\"\r\n      sx={{ width: '80%' }}\r\n      {...(audioState && { mt: 1 })}\r\n    >\r\n      <TimeIndicator\r\n        aria-label=\"time-indicator\"\r\n        size=\"small\"\r\n        value={audioControlState.position}\r\n        min={0}\r\n        step={1}\r\n        max={audioState.duration}\r\n        onChange={(_, value) => {\r\n          dispatch(setPosition(+value))\r\n          //* Handle music currentTime\r\n          audio.current.currentTime = +value\r\n        }}\r\n      />\r\n      <Stack\r\n        direction=\"row\"\r\n        alignItems=\"center\"\r\n        justifyContent=\"space-between\"\r\n        sx={{ width: '100%' }}\r\n      >\r\n        <TinyText>\r\n          {formatDuration(Math.floor(audioControlState.position))}\r\n        </TinyText>\r\n        <TinyText>\r\n          -\r\n          {formatDuration(\r\n            Math.floor(audioState.duration) -\r\n              Math.floor(audioControlState.position),\r\n          )}\r\n        </TinyText>\r\n      </Stack>\r\n    </Stack>\r\n  )\r\n}\r\n","const canvas = document.createElement('canvas')\r\ncanvas.width = canvas.height = 512\r\n\r\nconst video = document.createElement('video')\r\nvideo.srcObject = canvas.captureStream()\r\nvideo.muted = true\r\n\r\nexport default async function showPictureInPictureWindow(visible) {\r\n  if (visible) {\r\n    const image = new Image()\r\n    image.crossOrigin = true\r\n    image.src = [...navigator.mediaSession.metadata.artwork].pop().src\r\n    await image.decode()\r\n    canvas.getContext('2d').drawImage(image, 0, 0, 512, 512)\r\n    await video.play()\r\n    await video.requestPictureInPicture()\r\n  } else {\r\n    try {\r\n      await document.exitPictureInPicture()\r\n    } catch {}\r\n  }\r\n}\r\n","import { useSelector, useDispatch } from 'react-redux'\r\nimport { AppDispatch, RootState } from '../../store'\r\nimport { setFaster, setLoop, setPaused } from 'slices/audioControlSlice'\r\nimport { setPictureInPictureMode } from 'slices/audioControlSlice'\r\n\r\nimport showPictureInPictureWindow from '../../utils/pictureInPicture'\r\n\r\nimport Stack from '@mui/material/Stack'\r\nimport PauseRounded from '@mui/icons-material/PauseRounded'\r\nimport PlayArrowRounded from '@mui/icons-material/PlayArrowRounded'\r\nimport FastForwardRounded from '@mui/icons-material/FastForwardRounded'\r\nimport FastRewindRounded from '@mui/icons-material/FastRewindRounded'\r\nimport SpeedIcon from '@mui/icons-material/Speed'\r\nimport RepeatIcon from '@mui/icons-material/Repeat'\r\nimport IconButton from '@mui/material/IconButton'\r\nimport PictureInPictureAltIcon from '@mui/icons-material/PictureInPictureAlt'\r\nimport { useTheme } from '@mui/material/styles'\r\n\r\nexport default function Buttons({ audio, switchSong }) {\r\n  const audioControlState = useSelector(\r\n    (state: RootState) => state.audioControl,\r\n  )\r\n  const dispatch = useDispatch<AppDispatch>()\r\n  const theme = useTheme()\r\n\r\n  const mainIconColor = theme.palette.mode === 'dark' ? '#fff' : '#000'\r\n\r\n  return (\r\n    <Stack direction=\"row\" justifyContent=\"space-between\">\r\n      <IconButton\r\n        onClick={() => {\r\n          dispatch(setFaster(!audioControlState.faster))\r\n          audioControlState.faster\r\n            ? (audio.current.playbackRate = 1)\r\n            : (audio.current.playbackRate = 2)\r\n        }}\r\n        color={audioControlState.faster ? 'primary' : 'default'}\r\n      >\r\n        <SpeedIcon />\r\n      </IconButton>\r\n      <IconButton\r\n        aria-label=\"previous song\"\r\n        onClick={() => {\r\n          switchSong({ type: 'PREV' })\r\n        }}\r\n      >\r\n        <FastRewindRounded fontSize=\"large\" htmlColor={mainIconColor} />\r\n      </IconButton>\r\n      <IconButton\r\n        aria-label={audioControlState.paused ? 'play' : 'pause'}\r\n        onClick={() => {\r\n          if (audio.current.src != '') {\r\n            dispatch(setPaused(!audioControlState.paused))\r\n            //* Handle music play and pause\r\n            audioControlState.paused\r\n              ? audio.current.play()\r\n              : audio.current.pause()\r\n          }\r\n        }}\r\n        sx={{ boxShadow: '0px 0px 10px 2px rgba(0,0,0,0.28)' }}\r\n      >\r\n        {audioControlState.paused ? (\r\n          <PlayArrowRounded\r\n            sx={{ fontSize: '3rem' }}\r\n            htmlColor={mainIconColor}\r\n          />\r\n        ) : (\r\n          <PauseRounded sx={{ fontSize: '3rem' }} htmlColor={mainIconColor} />\r\n        )}\r\n      </IconButton>\r\n      <IconButton\r\n        aria-label=\"next song\"\r\n        onClick={() => {\r\n          switchSong({ type: 'NEXT' })\r\n        }}\r\n      >\r\n        <FastForwardRounded fontSize=\"large\" htmlColor={mainIconColor} />\r\n      </IconButton>\r\n      <IconButton\r\n        onClick={() => {\r\n          dispatch(setLoop(!audioControlState.loop))\r\n        }}\r\n        color={audioControlState.loop ? 'primary' : 'default'}\r\n      >\r\n        <RepeatIcon />\r\n      </IconButton>\r\n      <IconButton\r\n        onClick={() => {\r\n          showPictureInPictureWindow(!audioControlState.pictureInPictureMode)\r\n          dispatch(\r\n            setPictureInPictureMode(!audioControlState.pictureInPictureMode),\r\n          )\r\n        }}\r\n        color={audioControlState.pictureInPictureMode ? 'primary' : 'default'}\r\n      >\r\n        <PictureInPictureAltIcon />\r\n      </IconButton>\r\n    </Stack>\r\n  )\r\n}\r\n","import { useSelector, useDispatch } from 'react-redux'\r\nimport { setVolume } from 'slices/audioControlSlice'\r\nimport { VolumeIndicator } from '../player-components'\r\nimport { AppDispatch, RootState } from '../../store'\r\n\r\nimport Stack from '@mui/material/Stack'\r\nimport VolumeUpRounded from '@mui/icons-material/VolumeUpRounded'\r\nimport VolumeDownRounded from '@mui/icons-material/VolumeDownRounded'\r\nimport { useTheme } from '@mui/material/styles'\r\n\r\nexport default function Volume() {\r\n  const audioControlState = useSelector(\r\n    (state: RootState) => state.audioControl,\r\n  )\r\n  const dispatch = useDispatch<AppDispatch>()\r\n  const theme = useTheme()\r\n\r\n  const lightIconColor =\r\n    theme.palette.mode === 'dark' ? 'rgba(255,255,255,0.4)' : 'rgba(0,0,0,0.4)'\r\n  return (\r\n    <Stack\r\n      direction=\"row\"\r\n      justifyContent=\"center\"\r\n      alignItems=\"center\"\r\n      spacing={2}\r\n      sx={{ width: '100%', mt: 2, mb: 1 }}\r\n    >\r\n      <VolumeDownRounded htmlColor={lightIconColor} />\r\n      <VolumeIndicator\r\n        aria-label=\"Volume\"\r\n        value={audioControlState.volume}\r\n        onChange={(e: any) => {\r\n          dispatch(setVolume(e.target.value))\r\n        }}\r\n      />\r\n      <VolumeUpRounded htmlColor={lightIconColor} />\r\n    </Stack>\r\n  )\r\n}\r\n","import * as React from 'react'\r\nimport { useSelector, useDispatch } from 'react-redux'\r\nimport { setDuration } from '../slices/audioDataSlice'\r\nimport { setPosition, setPaused } from '../slices/audioControlSlice'\r\nimport { AppDispatch, RootState } from '../store'\r\nimport Cover from './player-sub-component/cover-info'\r\nimport TimeIndicator from './player-sub-component/time-indicator'\r\nimport Buttons from './player-sub-component/buttons'\r\nimport Volume from './player-sub-component/volume'\r\nimport PictureInPicture from './player-sub-component/picture-in-picture'\r\n// import { useTheme } from '@mui/material/styles'\r\nimport Stack from '@mui/material/Stack'\r\n\r\nexport default function MusicPlayer({ audio, switchSong }) {\r\n\r\n  const dispatch = useDispatch<AppDispatch>()\r\n  // const [duration, setDuration] = React.useState(200) // seconds\r\n\r\n  const audioControlState = useSelector(\r\n    (state: RootState) => state.audioControl,\r\n  )\r\n  // const [position, setPosition] = React.useState(0)\r\n  // const [paused, setPaused] = React.useState(true)\r\n  // const [volume, setVolume] = React.useState(30)\r\n  // const [faster, setFaster] = React.useState(false)\r\n  // const [pictureInPictureMode, setPictureInPictureMode] = React.useState(false)\r\n\r\n  //* Duration display\r\n\r\n  //* Set music duration\r\n  React.useEffect(() => {\r\n    if (audio.current !== null) {\r\n      audio.current.addEventListener('loadedmetadata', e => {\r\n        dispatch(setDuration(Math.floor(e.target.duration)))\r\n        // setDuration(Math.floor(e.target.duration))\r\n        dispatch(setPaused(false))\r\n      })\r\n\r\n      audio.current.addEventListener(\r\n        'timeupdate',\r\n        event => {\r\n          dispatch(setPosition(event.path[0].currentTime))\r\n        },\r\n        false,\r\n      )\r\n    }\r\n\r\n    // return () => {\r\n    //   audio.current.removeEventListener('loadedmetadata', e => {\r\n    //     dispatch(setDuration(Math.floor(e.target.duration)))\r\n    //     // setDuration(Math.floor(e.target.duration))\r\n    //     dispatch(setPaused(false))\r\n    //   })\r\n\r\n    //   audio.current.removeEventListener('timeupdate', event => {\r\n    //     dispatch(setPosition(event.path[0].currentTime))\r\n    //   })\r\n    // }\r\n  }, [])\r\n\r\n  //* Handle music volume\r\n  React.useEffect(() => {\r\n    if (audio.current != null)\r\n      audio.current.volume = audioControlState.volume / 100\r\n  }, [audioControlState.volume])\r\n\r\n  return (\r\n    <Stack\r\n      alignItems=\"center\"\r\n      sx={{\r\n        width: '35%',\r\n        overflow: 'hidden',\r\n        backgroundColor: '#fff',\r\n        borderRadius: '20px',\r\n        padding: '20px 0',\r\n        boxShadow: '0px 5px 15px 7px rgba(0,0,0,0.15)',\r\n      }}\r\n    >\r\n      {/*cover and info of song */}\r\n      <Cover />\r\n      {/*time indicator */}\r\n      <TimeIndicator audio={audio} />\r\n      {/*buttons */}\r\n      <Buttons audio={audio} switchSong={switchSong} />\r\n      {/* volume*/}\r\n      <Volume />\r\n      {/* <PictureInPicture /> */}\r\n    </Stack>\r\n  )\r\n}\r\n","import { useCallback, useEffect, useReducer, useRef, useState } from 'react'\r\nimport { Box, Stack, List, ListItem, Button, Grid } from '@mui/material'\r\nimport { useSelector, useDispatch } from 'react-redux'\r\n\r\nimport {\r\n  setTitle,\r\n  setArtist,\r\n  setGenre,\r\n  setImageSrc,\r\n  setAudioSrc,\r\n  setArtwork,\r\n} from './../slices/audioDataSlice'\r\nimport {\r\n  playingAudio as setAudioID,\r\n  setAudioList,\r\n} from './../slices/audioListSlice'\r\nimport MetaData from './../services/meta-data'\r\nimport getFileList from './../utils/getFileList'\r\nimport MusicPlayerSlider from './player'\r\n// import { useAuth0 } from '@auth0/auth0-react'\r\n// import Logout from 'components/logout'\r\nimport { InputFileContainer, PlayList, MyItem } from './player-components'\r\nimport AddIcon from '@mui/icons-material/Add'\r\nimport default_image from './../img/default_image.jpg'\r\nimport { RootState } from './../store'\r\nimport { color } from '@mui/system'\r\n\r\nimport './app-style.css'\r\n\r\ninterface State {\r\n  id: number | null,\r\n  status: 'NEXT' | 'PREV' | null\r\n}\r\n\r\ninterface Action {\r\n  type: 'NEXT' | 'PREV',\r\n  payload: any\r\n}\r\n\r\nexport default function Application() {\r\n  const audio = useRef(null)\r\n  const dispatch = useDispatch()\r\n\r\n  const audioState = useSelector((state: RootState) => state.audio)\r\n  // const [title, setTitle] = useState()\r\n  // const [artist, setArtist] = useState()\r\n  // const [genre, setGenre] = useState()\r\n  // const [audioSrc, setAudioSrc] = useState()\r\n  // const [artwork, setArtwork] = useState()\r\n  // const [imageSrc, setImageSrc] = useState()\r\n\r\n  const audioControlState = useSelector(\r\n    (state: RootState) => state.audioControl,\r\n  )\r\n  // const [loop, setLoop] = useState(false)\r\n\r\n  const [metaData, setMetaData] = useState(null)\r\n  const [files, setFiles] = useState({})\r\n\r\n  const audioListState = useSelector((state: RootState) => state.audioList)\r\n  // const [audioID, setAudioID] = useState(0)\r\n  // const [audioList, setAudioList] = useState([])\r\n\r\n  // const { isAuthenticated } = useAuth0()\r\n\r\n  function musicControlReducer(state: State, action: Action) {\r\n    switch (action.type) {\r\n      case 'NEXT':\r\n        return {\r\n          ...state,\r\n          status: 'NEXT',\r\n          id: audioListState.playingAudioId + 1,\r\n        }\r\n        break\r\n      case 'PREV':\r\n        return {\r\n          ...state,\r\n          status: 'PREV',\r\n          id: audioListState.playingAudioId - 1,\r\n        }\r\n        break\r\n      default:\r\n        return state\r\n    }\r\n  }\r\n\r\n  const [musicControl, musicControlDispatch] = useReducer(musicControlReducer, {\r\n    id: null,\r\n    status: null,\r\n  })\r\n\r\n  const handleEnded = useCallback(\r\n    playingAudioId => {\r\n      if (!audioControlState.loop) {\r\n        if (files && Object.keys(files).length !== 0) {\r\n          // @ts-ignore\r\n          if (files.length - 1 != playingAudioId) {\r\n            metaDataHandler(playingAudioId + 1)\r\n          }\r\n        }\r\n      }\r\n    },\r\n    [files],\r\n  )\r\n\r\n  useEffect(() => {\r\n    if (files) {\r\n      if (musicControl.status == 'NEXT') {\r\n        // @ts-ignore\r\n        if (files.length - 1 != audioListState.playingAudioId) {\r\n          metaDataHandler(audioListState.playingAudioId + 1)\r\n        } else {\r\n          metaDataHandler(0)\r\n        }\r\n      } else if (musicControl.status == 'PREV') {\r\n        // @ts-ignore\r\n        if (audioListState.playingAudioId != 0) {\r\n          metaDataHandler(audioListState.playingAudioId - 1)\r\n        } else {\r\n          // @ts-ignore\r\n          metaDataHandler(files.length - 1)\r\n        }\r\n      }\r\n    }\r\n  }, [musicControl])\r\n\r\n  const fileHandler = useCallback(async e => {\r\n    if (e.target.files.length) {\r\n      getFileList(e.target.files).then(fileListInfo => {\r\n        // @ts-ignore\r\n        dispatch(setAudioList(fileListInfo))\r\n      })\r\n      setFiles(e.target.files)\r\n      dispatch(setAudioID(0))\r\n      setMetaData(new MetaData(e.target.files[0]))\r\n    }\r\n  }, [])\r\n\r\n  const metaDataHandler = useCallback(\r\n    (id: number) => {\r\n      if (files) {\r\n        dispatch(setAudioID(Number(id)))\r\n        setMetaData(new MetaData(files[Number(id)]))\r\n      }\r\n    },\r\n    [files],\r\n  )\r\n\r\n  useEffect(() => {\r\n    if (!metaData) return\r\n    // metaData.getTitle().then(setTitle)\r\n    // metaData.getArtist().then(setArtist)\r\n    // metaData.getGenre().then(setGenre)\r\n    // metaData.getAudioSrc().then(setAudioSrc)\r\n    // metaData.getImageSrc().then(setImageSrc)\r\n    // metaData.getArtwork().then(setArtwork)\r\n    metaData.getTitle().then(title => dispatch(setTitle(title)))\r\n    metaData.getArtist().then(artist => dispatch(setArtist(artist)))\r\n    metaData.getGenre().then(gener => dispatch(setGenre(gener)))\r\n    metaData.getAudioSrc().then(audioSrc => dispatch(setAudioSrc(audioSrc)))\r\n    metaData.getImageSrc().then(imageSrc => dispatch(setImageSrc(imageSrc)))\r\n    metaData.getArtwork().then(artwork => dispatch(setArtwork(artwork)))\r\n    metaData.getInfo().then(console.log)\r\n  }, [metaData])\r\n\r\n  useEffect(() => {\r\n    if (\r\n      'mediaSession' in navigator &&\r\n      audioState.title &&\r\n      audioState.artist &&\r\n      audioState.artwork\r\n    ) {\r\n      navigator.mediaSession.metadata = new MediaMetadata({\r\n        title: audioState.title,\r\n        artist: audioState.artist,\r\n        album: audioState.genre,\r\n        artwork: audioState.artwork,\r\n      })\r\n    }\r\n  }, [audioState.artwork])\r\n\r\n  return (\r\n    // isAuthenticated && (\r\n    <Box sx={{ backdropFilter: 'blur(2px)!important' }}>\r\n      <Stack\r\n        style={{\r\n          height: '100vh',\r\n          display: 'flex',\r\n          backgroundColor: 'rgb(252, 182, 241)',\r\n        }}\r\n      >\r\n        <audio\r\n          src={audioState.audioSrc}\r\n          ref={audio}\r\n          loop={audioControlState.loop}\r\n          onEnded={() => {\r\n            handleEnded(audioListState.playingAudioId)\r\n          }}\r\n          autoPlay\r\n        ></audio>\r\n\r\n        <Grid\r\n          container\r\n          direction=\"row\"\r\n          justifyContent=\"space-around\"\r\n          alignItems=\"center\"\r\n          sx={{ height: '100%' }}\r\n        >\r\n          <MusicPlayerSlider audio={audio} switchSong={musicControlDispatch} />\r\n          <PlayList>\r\n            {files ? (\r\n              audioListState.audioList.map(\r\n                item =>\r\n                  item.name !== null && (\r\n                    <ListItem\r\n                      data-id={item.id}\r\n                      key={item.id}\r\n                      sx={{\r\n                        color: 'black',\r\n                        backgroundColor: 'white',\r\n                        borderTop: '1px solid gray',\r\n                        fontSize: 'small',\r\n                        width: '90%',\r\n                        height: '50px',\r\n                        margin: '0 auto',\r\n                        position: 'relative',\r\n                        //  marginLeft:'17px',\r\n                        //  marginRight:'4px',\r\n                        marginTop: '10px',\r\n                        border: 'none',\r\n                        borderRadius: '10px',\r\n                        '&:hover': {\r\n                          backgroundColor: 'rgb(224, 148, 212)',\r\n                        },\r\n                        '&:focus': {\r\n                          backgroundColor: 'rgb(201, 187, 201)',\r\n                        },\r\n                      }}\r\n                      onClick={(e: any) => {\r\n                        metaDataHandler(e.target.getAttribute('data-id'))\r\n                      }}\r\n                      button\r\n                    >\r\n                      <div>\r\n                        <Stack\r\n                          sx={{\r\n                            display: 'flex',\r\n                            flexDirection: 'row',\r\n                            flexWrap: 'nowrap',\r\n                            alignItems: 'center',\r\n                            // gap:'30px'\r\n                          }}\r\n                        >\r\n                          <h4 className=\"firststyle\">{item.id + 1}</h4>\r\n                          <div className=\"s1\">\r\n                            {item.imgSrc !== null && (\r\n                              <img\r\n                                src={item.imgSrc}\r\n                                alt=\"imgSrc\"\r\n                                width=\"30px\"\r\n                                height=\"30px\"\r\n                                style={{ borderRadius: '5px' }}\r\n                              />\r\n                            )}\r\n                          </div>\r\n                          <h4 className=\"s2\">{item.name}</h4>\r\n                          <h4 className=\"s3\">{item.artist}</h4>\r\n                          <h4 className=\"s4\">{item.duration}</h4>\r\n                        </Stack>\r\n                      </div>\r\n                    </ListItem>\r\n                  ),\r\n              )\r\n            ) : (\r\n              <p>Loading...</p>\r\n            )}\r\n          </PlayList>\r\n        </Grid>\r\n        <Box>\r\n          <InputFileContainer>\r\n            <input\r\n              className=\"input-file\"\r\n              id=\"musicFile\"\r\n              type=\"file\"\r\n              onChange={fileHandler}\r\n              accept=\"audio/*\"\r\n              multiple\r\n            />\r\n            <label htmlFor=\"musicFile\" className=\"input-file-trigger\">\r\n              <AddIcon sx={{ color: '#000' }} />\r\n            </label>\r\n            {/* <Logout /> */}\r\n          </InputFileContainer>\r\n        </Box>\r\n      </Stack>\r\n    </Box>\r\n    // )\r\n  )\r\n}\r\n","export default __webpack_public_path__ + \"static/media/sing.7a7868e2.svg\";","import React from 'react'\r\nimport { useNavigate } from 'react-router-dom'\r\n// import { useAuth0 } from '@auth0/auth0-react'\r\nimport { Button, Stack, Typography } from '@mui/material'\r\nimport { styled } from '@mui/system'\r\nimport IMGB from './../img/sing.svg'\r\n\r\nconst LoginButton = styled(Button)({\r\n  fontSize: '2.3rem',\r\n  display: 'flex',\r\n  justifySelf: 'center',\r\n  margin: '200px auto',\r\n  background: 'rgb(168, 153, 50)',\r\n})\r\n\r\nconst MYTypography = styled(Typography)({\r\n  color: 'orange',\r\n  fontFamily: 'fantasy',\r\n  marginTop: '100px',\r\n})\r\n\r\nexport default function Login() {\r\n  const navigate = useNavigate()\r\n  // const { loginWithRedirect, isAuthenticated } = useAuth0()\r\n\r\n  return (\r\n    //isAuthenticated&&\r\n    <Stack\r\n      sx={{\r\n        backgroundImage: `url('${IMGB}')`,\r\n        width: '100%',\r\n        height: '103vh',\r\n        margin: '-9px',\r\n      }}\r\n    >\r\n      <MYTypography align=\"center\" variant=\"h1\">\r\n        #PLAYER\r\n      </MYTypography>\r\n      <LoginButton\r\n        variant=\"contained\"\r\n        onClick={() => {\r\n          //loginWithRedirect\r\n          navigate('player')\r\n        }}\r\n      >\r\n        Sing In/ UP\r\n      </LoginButton>\r\n    </Stack>\r\n  )\r\n}\r\n","import Application from 'components/app'\r\nimport Login from 'components/login'\r\nimport { Route, Routes } from 'react-router-dom'\r\n// import { useAuth0 } from '@auth0/auth0-react'\r\n\r\nfunction App() {\r\n  // const { isLoading } = useAuth0()\r\n  // if (isLoading) return <div>Loading....</div>\r\n  return (\r\n    <>\r\n      <Routes>\r\n        <Route path=\"/\" element={<Login />} />\r\n        <Route path=\"player\" element={<Application />} />\r\n      </Routes>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default App\r\n","import { configureStore } from '@reduxjs/toolkit'\r\nimport audioDataSlice from './slices/audioDataSlice'\r\nimport audioControlSlice from './slices/audioControlSlice'\r\nimport audioListSlice from './slices/audioListSlice'\r\n\r\nexport const store = configureStore({\r\n  reducer: {\r\n    audio: audioDataSlice,\r\n    audioControl: audioControlSlice,\r\n    audioList: audioListSlice,\r\n  },\r\n})\r\n\r\nexport type RootState = ReturnType<typeof store.getState>\r\n\r\nexport type AppDispatch = typeof store.dispatch\r\n","// import * as React from 'react'\r\nimport ReactDOM from 'react-dom'\r\n// import 'module-alias/register'\r\n// import { StyledEngineProvider } from '@mui/material/styles'\r\nimport App from 'App'\r\n// import { Auth0Provider } from '@auth0/auth0-react'\r\nimport { BrowserRouter } from 'react-router-dom'\r\nimport { Provider } from 'react-redux'\r\nimport { store } from './store'\r\nimport { ErrorBoundary } from 'react-error-boundary'\r\nimport Fallback from './components/ErrorFallback'\r\n// const domain = process.env.REACT_APP_AUTH0_DOMAIN\r\n// const clientId = process.env.REACT_APP_AUTH0_CLIENT_ID\r\nReactDOM.render(\r\n  // <Auth0Provider\r\n  //   domain={domain}\r\n  //   clientId={clientId}\r\n  //   redirectUri={window.location.origin}\r\n  // >\r\n  //  <StyledEngineProvider injectFirst></StyledEngineProvider>\r\n  <ErrorBoundary FallbackComponent={Fallback}>\r\n    <Provider store={store}>\r\n      <BrowserRouter>\r\n        <App />\r\n      </BrowserRouter>\r\n    </Provider>\r\n  </ErrorBoundary>,\r\n\r\n  // </Auth0Provider>\r\n  document.querySelector('#root'),\r\n)\r\n","import './ErrorFallback.css'\r\n\r\nexport default function Fallback({ error, resetErrorBoundary }) {\r\n  return (\r\n    <section className=\"error\">\r\n      <div className=\"error-header\">\r\n        <h1>{error.message}</h1>\r\n      </div>\r\n      <div className=\"error-contant\">\r\n        <h3>There's a problem</h3>\r\n        <p>Press f12 to see error OR click on the Reload button</p>\r\n        <button className=\"link_404\" onClick={resetErrorBoundary} role={'link'}>\r\n          Reload\r\n        </button>\r\n      </div>\r\n    </section>\r\n  )\r\n}\r\n"],"sourceRoot":""}